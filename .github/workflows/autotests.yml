name: Autotests

on:
  workflow_call:
    inputs:
      chart-path:
        required: true
        type: string
      image-name:
        required: true
        type: string
      image-tag:
        required: true
        type: string

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Add helm repo
        run: |
          helm repo add cetic https://cetic.github.io/helm-charts
          helm repo update

      - name: Deploy rates
        run: |
          helm upgrade --install rates ${{ inputs.chart-path }} \
            --set fullnameOverride=rates \
            --set image.repository=miraclewisp/hse-rates \
            --set image.tag=amd64 \
            --set replicaCount=1 \
            --wait --timeout 60s

      - name: Deploy converter
        run: |
          helm upgrade --install converter ${{ inputs.chart-path }} \
            --set fullnameOverride=converter \
            --set image.repository=${{ inputs.image-name }} \
            --set image.tag=${{ inputs.image-tag }} \
            --set replicaCount=2 \
            --wait --timeout 60s

      - name: Run tests
        run: |
          helm install autotest cetic/job \
            --set image.repository=miraclewisp/hse-rates \
            --set image.tag=amd64 \
            --set backoffLimit=0 \
            --set 'args={\"test\"\, \"http://converter:8080\"}' \
            --wait --wait-for-jobs --timeout 60s

      - name: Debug logs
        run: |
          echo "Rate logs:"
          kubectl logs --selector app.kubernetes.io/instance=rates --tail=-1  
          echo "Converter logs:"
          kubectl logs --selector app.kubernetes.io/instance=converter --tail=-1  

      - name: Get test logs
        run: |
          kubectl logs jobs/autotest-job
          ERROR_LOGS=$(kubectl logs jobs/autotest-job | grep ERROR || true)
          echo "JOB_ERRORS<<EOF" >> $GITHUB_ENV
          echo "$ERROR_LOGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: actions/github-script@v7
        with:
          script: |
            const errors = process.env.JOB_ERRORS
            let body = ""
            if (errors) {
              body = `### ❌ Ошибки \n\n ${errors}`
            } else {
              body = `### ✅ Тесты пройдены`
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
