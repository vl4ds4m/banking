name: Run accounts tests

on:
  workflow_call:
    inputs:
      chart_path:
        required: true
        type: string
      converter_image_name:
        required: true
        type: string
      accounts_image_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
    secrets:
      HSE_LOKI_TOKEN:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          cpus: max
          memory: max

      - name: Add helm repo
        run: |
          helm repo add cetic https://cetic.github.io/helm-charts
          helm repo add codecentric https://codecentric.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add vector https://helm.vector.dev
          helm repo update

      - name: Deploy vector
        continue-on-error: true
        run: |
          helm upgrade --install vector vector/vector \
            --values test/k8s/cfg/vector-values.yml \
            --set customConfig.sinks.loki.auth.password=${{ secrets.HSE_LOKI_TOKEN }} \
            --set-string customConfig.sinks.loki.labels.repository='${{ github.repository }}' \
            --set-string customConfig.sinks.loki.labels.run_id='${{ github.run_id }}' \
            --wait --timeout 180s   

      - name: Deploy postgres
        continue-on-error: true
        run: |
          helm install postgresql bitnami/postgresql \
            -f test/k8s/cfg/postgres-values.yml \
            --wait --timeout 180s   

      - name: Deploy redis
        continue-on-error: true
        run: |
          helm install redis bitnami/redis \
            -f test/k8s/cfg/redis-values.yml \
            --wait --timeout 180s      

      - name: Deploy kafka
        continue-on-error: true
        run: |
          helm upgrade --install kafka bitnami/kafka \
            -f test/k8s/cfg/kafka-values.yml \
            --wait --timeout 180s

      - name: Deploy keycloak
        continue-on-error: true
        run: |
          kubectl create secret generic realm-secret --from-file=test/k8s/cfg/realm.json
          helm install keycloak codecentric/keycloakx --version 2.3.0 \
            -f test/k8s/cfg/keycloak-values.yml \
            --wait --timeout 180s

      - name: Deploy rates
        continue-on-error: true
        run: |
          helm upgrade --install rates ${{ inputs.chart_path }} \
            -f test/k8s/cfg/rates-values.yml \
            --wait --timeout 180s

      - name: Deploy converter
        continue-on-error: true
        run: |
          helm upgrade --install converter ${{ inputs.chart_path }} \
            --set image.repository=${{ inputs.converter_image_name }} \
            --set image.tag=${{ inputs.image_tag }} \
            -f test/k8s/cfg/converter-values.yml \
            --wait --timeout 180s

      - name: Deploy accounts
        continue-on-error: true
        run: |
          helm upgrade --install accounts ${{ inputs.chart_path }} \
            --set image.repository=${{ inputs.accounts_image_name }} \
            --set image.tag=${{ inputs.image_tag }} \
            -f test/k8s/cfg/accounts-values.yml \
            --wait --timeout 180s

      - name: Run tests
        continue-on-error: true
        run: |
          helm install autotest cetic/job \
            -f test/k8s/cfg/test-values.yml \
            --wait --wait-for-jobs --timeout 600s

      - name: Debug k8s entities
        run: |
          kubectl get deployments
          kubectl get pods
          kubectl get services

      - name: Debug logs
        run: |
          kubectl get pods -n default|grep -v NAME|awk '{print $1}'|while read pods;do kubectl logs $pods;echo;done      

      - name: Get test logs
        run: |
          kubectl logs jobs/autotest-job | sed -n '/--- TEST RESULTS BEGIN ---/, /--- TEST RESULTS END ---/p' || true
